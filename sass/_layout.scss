// ### Clases reutilizables pero no m√≥dulos ###
//@import "utilities";

$transition: all .2s ease-in-out;
$porc : 5.7999%;

@mixin hover-effect-bg($value){
    transition: $transition;
    &:hover{
        background-color: $value !important;
    }
}
@mixin hover-effect-tx($value) {
    transition: $transition;
    &:hover{
        color: $value !important;
    }
}

// ### Colors ###
@each $color, $value in $colors {
    .#{$color}{
        background-color: $value !important;
    }
    @for $i from 1 through 5{
        .#{$color}-lt-#{$i}{
            background-color: lighten($value, $i * $porc) !important;
        }
        .#{$color}-dk-#{$i}{
            background-color: darken($value, $i * $porc) !important;
        }

        .tx-#{$color}{
            color: $value !important;
        }
        .tx-#{$color}-lt-#{$i}{
            color: lighten( $value, $i * $porc) !important;
        }
        .tx-#{$color}-dk-#{$i}{
            color: darken( $value, $i * $porc) !important;
        }

        .hv-#{$color}{
            @include hover-effect-bg($value);
        }
        .hv-#{$color}-lt-#{$i}{
            @include hover-effect-bg(lighten($value, $i * $porc));
        }
        .hv-#{$color}-dk-#{$i}{
            @include hover-effect-bg(darken($value, $i * $porc));
        }

        .hv-tx-#{$color}{
            @include hover-effect-tx($value);
        }
        .hv-tx-#{$color}-lt-#{$i}{
            @include hover-effect-tx(lighten($value, $i * $porc));
        }
        .hv-tx-#{$color}-dk-#{$i}{
            @include hover-effect-tx(darken($value, $i * $porc));
        }
    }
}


@each $color, $value in $bwt {
    .#{$color}{
        background-color: $value !important;
    }
    .tx-#{$color}{
        color: $value !important;
    }
    .hv-#{$color}{
        @include hover-effect-bg($value);
    }
    .hv-tx-#{$color}{
        @include hover-effect-tx($value);
    }
}
